/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  www.openfoam.org
    \\  /    A nd           | Version:  User generated
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/

FoamFile
{
    format      ascii;
    class       dictionary;
    location    "system";
    object      snappyHexMeshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //


// Decide which of the steps to run ---------------------------------------- //

castellatedMesh         true;   // Create basic mesh
snap                    true;   // Create mesh snapped to surfaces
addLayers               true;   // Create mesh layers on specified surfaces


// Specify OPTIONAL mesh settings ------------------------------------------ //

singleRegionName        true;   // def true  | single region surfaces named based on surface
mergePatchFaces         true;   // def true  | enables merging of coplaner cell faces
mergeAcrossPatches      false;  // def false | merging of coplanar faces on different patches
keepPatches             false;  // def false | enables removing zero sized patches


// Geometry definition (loaded from stl files) ----------------------------- //

geometry  // MANDATORY: Definition of stl files and the associate patch names
// Format: example.stl {type triSurfaceMesh; name example; file "example.stl";}
{
        // Insert the required $STL_FILES_AND_GEOMETRIES$
        // refinementBox {type searchableBox; min (0.0 0.0 0.0); max (1.0 1.0 1.0);}
};


// Settings for castellatedMesh generation  -------------------------------- //

castellatedMeshControls
{
        features  // OPTIONAL: Refinement of edges (default = {file "name.eMesh"; level 0;}
        // Format: {file "exampleFileName.eMesh"; level <refinement level>;}
        (
            // Insert the required $MESH_FEATURES$
        );

        refinementSurfaces  // MANDATORY: Definition and refinement of surfaces
        // Format: patchName {level (0 0); patchInfo {type patchType;} }
        // Refinement levels (min max) are linked resolveFeatureAngle parameter
        {
            // Insert the required $REFINEMENT_SURFACES$
        }

    refinementRegions  // OPTIONAL: Specify additional regions to be refined
    {
        //exampleVolume {mode inside; levels ((1.0 2));}
        //exampleSurface {mode distance; levels ((0.2 2) (0.3 1));} //vane leading edge
    }


    // Refinement parameters  ---------------------------------------------- //

    maxLocalCells       10000000;    // Maximum cells per CPU core
    maxGlobalCells      100000000;   // Maximum cells aded before mesh deletion step
    minRefinementCells  10;          // Was 0 Number of bad cells allowed in refinement stages (0 = none)
    maxLoadUnbalance    0.10;        // Maximum processor load unbalance
    nCellsBetweenLevels 3;           // Was 3 | Number of buffer layers between different levels


    locationInMesh (0 0 0);    // Set (X, Y, Z) coordinates to decide which side of mesh to keep


    resolveFeatureAngle 30;           // When to use maximum refinement specified in surfaces
    allowFreeStandingZoneFaces true;  // NEEDED FOR BAFFELS | Allow zone faces that share owner & neighbour cell zone
}


// Settings for mesh snapping ---------------------------------------------- //

snapControls
{
    nSmoothPatch 3;        // Was  3 | Patch smoothing iterations to find correspondence to surface
    tolerance 0.7;         // Was  2 | Relative distance for points to be attracted by surface feature
    nSolveIter 60;         // Was 30 | Number of mesh displacement relaxation iterations
    nRelaxIter  5;         // Was  5 | Maximum number of snapping relaxation iterations
    nFeatureSnapIter 10;   // Was 10 | Moprh iterations within main snapping to avoid sharp edges
                           // WARNING: too many nFeatureSnapIter can collapse boundary layers

    implicitFeatureSnap false;    // was false | detect features by sampling surface
    explicitFeatureSnap true;     // was true  | detect featured using castellatedMeshControls
    multiRegionFeatureSnap true;  // was false | detects features between multiple surfaces
}


// Settings for the layer addition ----------------------------------------- //

addLayersControls
{
    relativeSizes true;    // Decide if layer size is absolut or relative to nearby cells
    layers
    {
        // example{nSurfaceLayers 2; expansionRatio 1.2; finalLayerThickness 0.3; minThickness 0.1;}
        // walls{nSurfaceLayers 0;}
        // Insert the required $SURFACE_LAYERS$ (Ensure to set 0 for baffles!)
    }

    expansionRatio 1.20;        // Was 1.2   | Rate at which cell layers grow
    finalLayerThickness 0.75;   // Was 1     | Thickness of layer in relation to neighbour cell
    // firstLayerThickness 0.3     // Was 0.3   | Relative thickness of wall adjacent cells
    minThickness 0.00001;       // Was 0.001 | Minimum thickness of layer
    nGrow 1;                    // Was 0     | Distance to keep to a neighbour patch with no layers (0 = no distance)


    // Advanced settings for the layer addition ---------------------------- //

    // Static analysis of starting mesh
    featureAngle 170;           // was 130 | when not to extrude surface (0 = flat 90 = perpendicular faces
    maxFaceThicknessRatio 0.5;  // Was 0.5 | Stop layer growth on highly warped cells
    mergePatchFacesAngle 45;    // Was 45  | If a cell has multiple faces on the same patch these get merged

    // Patch displacement
    nSmoothSurfaceNormals 2;    // was  1  | Smoothing iterations of surface normals
    nSmoothThickness 20;        // Was 10  | Smooth layer thickness over surface patches

    // Medial axis analysis
    minMedialAxisAngle 90;         // was  90 | Angle used to pick up medial axis points
    maxThicknessToMedialRatio 0.3; // Was 0.3 | Reduce layer growth if ratio thickness to medial distance is large
    nSmoothNormals 8;              // was  3  | Smoothing iterations of interior mesh movement direction

    // Mesh shrinking
    slipFeatureAngle 30;        // was 30 | Angle above which mesh is allowed to slip at non-patch sides
    nRelaxIter 10;              // was  5 | Max. snapping relaxation iterations (good mesh shouldnt reach this)
    nBufferCellsNoExtrude 0;    // Was  2 | Gradually step down number of layers (0 = all in one go)
    nLayerIter 60;              // was 50 | Overall max number of layer addition iterations
    nRelaxedIter 30;            // was 20 | number of iterations before relaxed settings are used
    nSmoothThickness 20;        // Was 10 | Smooth layer thickness over surface patches
    layerTerminationAngle -180; // When to attempt extruding at sharp edges (-180 = always)
    nBufferCellsNoExtrude 0;    // Create buffer region for new layer terminations (below 0 = terminate layer in one go)

}


// Generic mesh settings (Determine actions at any undoable phase) --------- //

meshQualityControls
{
    maxNonOrtho 75;             // was 75 | Maximum non-orthogonality allowed. Set to 180 to disable.
    maxBoundarySkewness 20;     // was 20
    maxInternalSkewness 4;      // was 4
    maxConcave 80;              // was 80
    minVol 1e-15;               // was 1e-13
    minTetQuality 1e-15;        // was 1e-15 | (large negative for best layer insertion)
    minVolCollapseRatio   0.5;  // was 0.5 | if <0: delete always, else keep cells with higher ratio
    minArea 1e-11;              // was 2e-8 | Minimum face area. <0 disables ASTAR = -1
    minTwist 0.05;              // minimum face twist. <-1 disables
    minDeterminant 0.001;       // was 0.001 | Minimum normalised cell determinant. 1 = hex, <= 0 is illegal cell
    minFaceWeight 0.03;         // was 0.05 | Minimum face interpolation weight (0.5 for orthogonal mesh)
    minFaceFlatness 0.5;        // was 0.5
    minVolRatio 0.01;           // minimum volume ratio to neighbour cell
    minTriangleTwist -1;        // was -1 |  enter >0 for fluent compatibility

    // Advanced layer settings
    nSmoothScale 10;            // was 4 | number of error distribution iterations
    errorReduction 0.8;         // was 0.75 | amount to scale back displacement at error points

    // Relaxed layer settings
    relaxed
    {
        maxNonOrtho 75;
    }
}


// Advanced mesh quality settings ------------------------------------------ //

debug 0;
// Note: the write tolerance needs to be higher than this.
mergeTolerance 1E-6; // Merge tolerance as a fraction of overall bounding box of initial mesh


// ************************************************************************* //
