#!/bin/bash

# Exit if 'constant' or 'system' directories are missing
[ -d "constant" ] || { echo "ERROR: 'constant' directory is missing."; exit 1; }
[ -d "system" ] || { echo "ERROR: 'system' directory is missing."; exit 1; }

# Remove previous time steps
foco deleteTimeSteps

# Remove previous mesh artifacts
foco deleteMesh

# Generate the background computational mesh from blockMeshDict
blockMesh

# Remove the dynamic code generated by blockMesh
rm -r dynamicCode

# Extract feature edges from the surface geometry for better meshing
surfaceFeatures

# Decompose the domain for parallel execution based on decomposeParDict
# -force = removes existing processor folders
decomposePar -force -copyZero 2>&1 | tee log.decomposePar

# Grab the number of processors from the "decomposeParDict" file
NPROCS=$(foamDictionary -entry numberOfSubdomains -value system/decomposeParDict)

# Run snappyHexMesh in parallel, logging the output to 'log.snappyHexMesh'
mpirun -np $NPROCS --rankfile system/rankfile snappyHexMesh -parallel -overwrite 2>&1 | tee log.snappyHexMesh

# Reconstruct the decomposed mesh back into a single mesh (useful for post-processing)
reconstructPar -constant 2>&1 | tee log.reconstructPar

# Remove meshing directories
rm -r processor*

# Renumber the mesh to make it easier to handle in post-processing
# renumberMesh -constant -noZero -overwrite

# Run checkMesh and save the results to a new log
checkMesh 2>&1 | tee log.checkMesh
