/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  www.openfoam.org
    \\  /    A nd           | Version:  User generated
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/

FoamFile
{
    format      ascii;
    class       dictionary;
    location    "constant";
    object      dynamicMeshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

mover
{
    type             motionSolver;
    libs             ("libsixDoFRigidBodyMotion.so");

    motionSolver            sixDoFRigidBodyMotion;

    sixDoFRigidBodyMotionCoeffs
    {
        //  The following items are read from the rigidBodyMeshMotionSolver class 
        //  lOD = lookupOrDefault | l = lookup
        //  :: l :: patches
        //  :: l :: innerDistance
        //  :: l :: outerDistance
        //  :: l :: g              (only if g is in db()) 
        //  :: lOD :: test         (default = false) | test mode, only g act 
        //  :: lOD :: rho          (default = rho)   | needed for incompressible
        //                         if rho = rhoInf -> lookup rhoInf value

        //- List of mesh patches associated with the solid body 
        patches         (VAWT);

        //- Inner morphing distance (limit of solid-body region)
        innerDistance   1.0;

        //- Outer morphing distance (limit of linear interpolation region)
        outerDistance   1.1;

        //- Note: Based on innterDistance and outerDistance, we make a pointField
        //  that scales the morphing items (see also in the source code)

        //- Gravitational acceleration if g is used in the calculation
        //g               (0 0 0);

        //  Denisty name (normally rho but for incompressible cases we have to
        //  specify rhoInf and set the density). Each name different from rhoInf
        //  will be treated as variable. E.g. if we set rhoTest, FOAM search for
        //  a reserved rhoTest quantity
        rho             rhoInf;

        //- For incompressible cases [kg/m^3]
        // rhoInf          1.2;  // Density of air
        rhoInf          998;  // Density of water




        //  The following items is read from the sixDoFRigidBodyMotion class and
        //  sixDoFRigidBodyMotionState
        //  lOD = lookupOrDefault | l = lookup
        //  :: l ::  mass
        //  :: l ::  momentOfInertia
        //
        //  :: lOD :: initialCentreOfMass       (default = l :: centreOfMass)
        //  :: lOD :: centreOfRotation          (default = l :: centreOfMass)
        //  :: lOD :: initialOrientation        (default = l :: orientation)
        //  :: lOD :: orientation               (default = identiy matrix I)
        //  :: lOD :: accelerationRelaxation    (default = 1) 
        //  :: lOD :: accelerationDumping       (default = 1)
        //  :: lOD :: report                    (default = false)
        //  :: lOD :: velocity                  (default = (0 0 0))
        //  :: lOD :: acceleration              (default = (0 0 0)) 
        //  :: lOD :: angularMomentum           (default = (0 0 0))
        //  :: lOD :: torque                    (default = (0 0 0))
        //
        //  -- need subDicts 
        //          "solver"
        //     and read if found
        //          "restraints"
        //          "constraints"

        //  Mass of the moving object [kg]
        mass        180;

        // Moments of inertia of the object (IX IY IZ)
        momentOfInertia (2.59 2.59 2.65);

        //- Intial center of mass or rotation of the rigid-body 
        centreOfMass           (0 0 0);
        //centreOfRotation     (0 0 0);

        //- Intial center of mass of the rigid-body (used if CenterOfMass move)
        //initialCenterOfMass  (0 0 0);

        //- Initial orientation of the rigid-body (default) and rotational orient.
        orientation
        (
            1 0 0
            0 1 0
            0 0 1
        );

        // Linear velocity of the rigid-body
        velocity        (0 0 0);

        // Total linear acceleration of the rigid-body
        acceleration    (0 0 0);

        // Angular momentum of the rigid-body in local reference frame
        angularMomentum (0 0 0);

        // Total torque on rigid-body in local reference frame
        torque          (0 0 0);

        // Report motion data
        report          on;

        // Acceleration relaxation coeff [0-1]
        // accelerationRelaxation 0.7;

        // Acceleration dumping coeff (for steady-state simulations) [0-1]
        // accelerationDumping 0.1;


        //  Motion Solver only needed for deforming meshes, not sliding meshes
        //  Options: {Newmark, Crank-Nicolsen, etc }
        solver
        {
            type Newmark;
        }


        //- Section for constraints (Check the openfoamwiki or the source code)
        constraints
        {
            zAxis  // Arbitrary name
            {
                // Fix the axis
                // Here: rigid-body cannot move in x and z and rotate
                // But we could move in y direction
                sixDoFRigidBodyMotionConstraint axis;
                axis (0 0 1);  //
            }
            fixedPt  // Arbitrary name
            {
                //- Fix the point
                //  Here: motion also avoided in y direction
                //  Only possibility now -> rotate arount y axis
                sixDoFRigidBodyMotionConstraint point;
                centreOfRotation (0 0 0.025);
            }
        }

        
        //- Section for restraints
        //  Checkout the openfoamwiki or the source code
        restraints
        {
            //- Some dumping functions
            /*translationDamper
            {
                    //- Nms/rad
                    //  Acts against motion as friction
                    sixDoFRigidBodyMotionRestraint  sphericalAngularDamper;
                    coeff 0.05;
            }
            */
        }
    }
}


// ************************************************************************* //
