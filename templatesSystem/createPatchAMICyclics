/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  User generated                        |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/

FoamFile
{
    format      ascii;
    class       dictionary;
    location    "system";
    object      createPatchDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

pointSync false;  //synchronisation of coupled points after creation

patches
(
    {
        name cyclicAMI_A;                        // New name of master patch
        constructFrom set;                       // Basis of construction
        set cyclicAMI_ASet;                      // Name of the faceZone to use
        patchInfo
        {
            type             cyclicAMI;          // Type of new patch
            matchTolerance   0.0001;             // Bad mesh needs higher tolerance
            transform        translational;      // Type of connection
            separationVector (0 0 0);            // Distance between patches
            neighbourPatch   cyclicAMI_A_slave;  // Name of connected patch
        }
    }

    {
        name cyclicAMI_A_slave;                  // New name of slave patch
        constructFrom set;                       // Basis of construction
        set cyclicAMI_ASet;                      // Name of the faceZone to use
        patchInfo
        {
            type             cyclicAMI;          // Type of new patch
            matchTolerance   0.0001;             // Bad mesh needs higher tolerance
            transform        translational;      // Type of connection
            separationVector (0 0 0);            // Reverse distance between patches
            neighbourPatch   cyclicAMI_A;        // Name of connected patch
        }
    }

    {
        name cyclicAMI_B;                        // New name of master patch
        constructFrom set;                       // Basis of construction
        set cyclicAMI_BSet;                      // Name of the faceZone to use
        patchInfo
        {
            type             cyclicAMI;          // Type of new patch
            matchTolerance   0.0001;             // Bad mesh needs higher tolerance
            transform        translational;      // Type of connection
            separationVector (0 0 0);            // Distance between patches
            neighbourPatch   cyclicAMI_B_slave;  // Name of connected patch
        }
    }

    {
        name cyclicAMI_B_slave;                  // New name of slave patch
        constructFrom set;                       // Basis of construction
        set cyclicAMI_BSet;                      // Name of the faceZone to use
        patchInfo
        {
            type             cyclicAMI;          // Type of new patch
            matchTolerance   0.0001;             // Bad mesh needs higher tolerance
            transform        translational;      // Type of connection
            separationVector (0 0 0);            // Reverse distance between patches
            neighbourPatch   cyclicAMI_B;        // Name of connected patch
        }
    }
);

// ************************************************************************* //
