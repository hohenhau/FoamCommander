/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  User generated                        |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/

FoamFile
{
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     foamRun; // Type of solver to be used in the simulation

solver          incompressibleFluid; // Choice of solver

startFrom       latestTime; // Start simulation from the latest available time

startTime       0; // specifies start unless overridden by 'latestTime'

stopAt          endTime; // Simulation will run until end time

endTime         10; // End time of the simulation

deltaT          1; // This has no impact on SIMPLE solver

writeControl    timeStep; // Can be set to "adjustableRunTime"

writeInterval   5; // Interval at which data is written to the disk

purgeWrite      0; // limits the number of time steps retained (0 = keep all)

writeFormat     binary; //can be "ascii" or "binary"

writePrecision  6; // Default is 6

writeCompression off; //can be "off" or "compressed"

timeFormat      general; // naming format of the time directories

timePrecision   6; //  decimal places used in naming the directories

runTimeModifiable true; // Parameters can be modified during the simulation

adjustTimeStep  yes; // Adjusts timestep based on Courant Number

maxCo           0.999; // Set to below 1 for good stability

functions
{
    CourantNo
    {
        type                    CourantNo;                              // Mandatory entries (unmodifiable)
        libs                    ("libfieldFunctionObjects.so");         // Mandatory entries (unmodifiable)
        executeControl          writeTime;                              // Optional (inherited) entries
        executeInterval         1;                                      // Optional (inherited) entries
        writeControl            writeTime;                              // Optional (inherited) entries
        writeInterval           1;                                      // Optional (inherited) entries
        enabled                 true;                                   // Optional (inherited) entries
    }

    yPlus
    {
        type                    yPlus;                                  // Mandatory entries (unmodifiable)
        libs                    ("libfieldFunctionObjects.so");         // Mandatory entries (unmodifiable)
        executeInterval         1;                                      // Optional (inherited) entries
        writeControl            writeTime;                              // Optional (inherited) entries
        writeInterval           1;                                      // Optional (inherited) entries
        enabled                 true;                                   // Optional (inherited) entries
    }

    turbulenceFields
    {
        type                    turbulenceFields;                       // Mandatory entries (unmodifiable)
        libs                    ("libfieldFunctionObjects.so");         // Mandatory entries (unmodifiable)
        executeControl          writeTime;                              // Optional (inherited) entries
        executeInterval         1;                                      // Optional (inherited) entries
        writeControl            writeTime;                              // Optional (inherited) entries
        writeInterval           1;                                      // Optional (inherited) entries
        fields                  (L I);                                  // Mandatory entries (runtime modifiable)
        enabled                 false;                                   // Optional (inherited) entries
    }

    residuals
    {
        type                    residuals;                              // Mandatory entries (unmodifiable)
        libs                    ("libutilityFunctionObjects.so");       // Mandatory entries (unmodifiable)
        executeControl          writeTime;                              // Optional (inherited) entries
        executeInterval         1;                                      // Optional (inherited) entries
        writeControl            timeStep;                               // Optional (inherited) entries
        writeInterval           1;                                      // Optional (inherited) entries
        fields                  (".*");                                 // Mandatory entries (runtime modifiable)
        enabled                 true;                                   // Optional (inherited) entries
    }
}

// ************************************************************************* //

