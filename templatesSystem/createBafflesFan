/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  www.openfoam.org
    \\  /    A nd           | Version:  User generated
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/

FoamFile
{
    format      ascii;
    class       dictionary;
    location    "system";
    object      createBafflesDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Only relevant if your face selection type can pick up a boundary
internalFacesOnly true;  // Only relevant if face selection can detect boundaries

baffles  // Baffles to create
{
    fanBaffleABoth  // First baffle to be created
    {
        type        faceZone;      // select faces & orientation
        zoneName    fanBaffleAFaces;  // name specified in snappyhexmesh

        patches
        {
            master  // Master side patch
            {
                name            fanBaffleA;
                type            cyclic;
                neighbourPatch  fanBaffleA_slave;
                transform       none;  // Option {none, rotational, translational} 

                patchFields  // Optional override of patchfields (default is type "calculated")
                {
                    p  // Jump is in units of pressure(Pa) over density(rho)
                    {
                        type            fanPressureJump;
                        patchType       cyclic;
                        value           uniform 0;
                        jump            uniform 0;
                        jumpTable       constant 1.6;  // Options {constant, polynomial} | was polynomial 1((100 0));
                        reverse         false;
                    }
                }
            }

            slave  // Slave side patch
            {
                name            fanBaffleA_slave;
                type            cyclic;
                neighbourPatch  fanBaffleA;
                patchFields {${...master.patchFields}}
                // CANNOT USE this copy method if there are mulitple patches
            }
        }
    }
    // fanBaffleBBoth  // Specify additional baffles here
    // {
    // }
}

// ************************************************************************* //
