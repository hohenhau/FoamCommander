/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  User generated                        |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/

FoamFile
{
    format      ascii;
    class       dictionary;
    location    "system";
    object      createBafflesDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Only relevant if your face selection type can pick up a boundary
internalFacesOnly true;  // Only relevant if face selection can detect boundaries

baffles  // Baffles to create
{
    cyclicFacesA  // First baffle to be created
    {
        type        faceZone;      // select faces & orientation
        zoneName    fanBaffleFaces;  // name specified in snappyhexmesh

        patches
        {
            master  // Master side patch
            {
                name            fanBaffle0;
                type            cyclic;
                neighbourPatch  fanBaffle1;

                patchFields  // Optional override of patchfields (default is type "calculated")
                {
                    p
                    {
                        type            fanPressure;
                        patchType       cyclic;
                        direction       in;
                        fanCurve        table ((2.24 -1e6) (2.25 0) (2.26 1e6));  // Steep slope at Q=2.25
                        p0              uniform 0;  // Reference pressure
                        value           uniform 0;
                    }
                }
            }

            slave  // Slave side patch
            {
                name            fanBaffle1;
                type            cyclic;
                neighbourPatch  fanBaffle0;
                patchFields {${...master.patchFields}}
                // CANNOT USE this copy method if there are mulitple patches
            }
        }
    }
    // cyclicFacesB  // Specify additional baffles here
    // {
    // }
}

// ************************************************************************* //
