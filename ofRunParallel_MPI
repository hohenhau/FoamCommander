#!/bin/bash

# Remove all processor directories (from a previous parallel run)
rm -r processor*

# Grab the number of processors from decomposeParDict
NPROCS=$(foamDictionary -entry numberOfSubdomains -value system/decomposeParDict)

# Grab the application from controlDict
APP=$(foamDictionary -entry application -value system/controlDict)

# Grab the solver from controlDict
SOLVER=$(foamDictionary -entry solver -value system/controlDict)

# Print solver and processors to terminal
echo Running $APP with the $SOLVER solver on $NPROCS processors

# Decompose the domain for parallel computing
decomposePar 2>&1 | tee log.decomposePar

# Move 0 files for processor folders
cp -r 0 processor*/*

# Renumber the mesh for better convergence (not usable with cyclics!)
# renumberMesh -overwrite -constant

# Monitor the run using pyFoam
# pyFoamPlotRunner.py

# Run the detected solver in parallel
mpirun -np $NPROCS --rankfile system/rankfile $APP -solver $SOLVER -parallel 2>&1 | tee log.$APP

# Reconstruct latest timestep
reconstructPar -latestTime 2>&1 | tee log.reconstructPar

# Add dimensions to y+ and Courant number
ofAddDimensions.py

# Plot the residuals and save the plot
ofPlotResiduals.py
