#!/bin/bash

# Set the directory where commands are located.
TOOL_DIR="$(dirname "${BASH_SOURCE[0]}")/tools"

# Check if this script is being sourced or executed directly
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    # Script is being executed directly

    # If no arguments are provided, show usage and available commands.
    if [ $# -lt 1 ]; then
        echo "Usage: foco <command> [args]"
        echo "Available commands:"
        # List tools, stripping `.py` extensions & exclude files in 'utilities'
        find "${TOOL_DIR}" -maxdepth 1 -type f -not -path "${TOOL_DIR}/utilities/*" | sed 's/\.py$//g' | sed 's|'"${TOOL_DIR}"'/||g'
        exit 1
    fi

    # First argument is the command name.
    cmd=$1
    shift # Shift removes the command name, leaving only the arguments.

    # Check if command is a Python script in the tools directory.
    if [ -f "${TOOL_DIR}/${cmd}.py" ]; then
        python3 "${TOOL_DIR}/${cmd}.py" "$@" # Pass remaining arguments to the Python script.
    # Check if command is a plain executable (bash script, etc.).
    elif [ -f "${TOOL_DIR}/${cmd}" ]; then
        "${TOOL_DIR}/${cmd}" "$@" # Directly run the executable with arguments.
    # Handle unknown command.
    else
        echo "Unknown command: $cmd"
        exit 1
    fi
else
    # Script is being sourced - load the completion
    source "$(dirname "${BASH_SOURCE[0]}")/completion/foco-completion.bash"
fi