#!/bin/bash

# Remove previous processor directories (from parallel runs)
rm -r processor* ??? ?0

# Generate the background computational mesh from blockMeshDict
blockMesh

# Remove the dynamic code generated by blockMesh
rm -r dynamicCode

# Extract feature edges from the surface geometry for better meshing
surfaceFeatures

# Decompose the domain for parallel execution based on decomposeParDict
decomposePar -copyZero

# Renumber the mesh to help with the load balancing of the meshing
renumberMesh -constant -noZero -overwrite

# Grab the number of processors from the "decomposeParDict" file
NPROCS=$(foamDictionary -entry numberOfSubdomains -value system/decomposeParDict)

# Run snappyHexMesh in parallel, logging the output to 'log_mesh'
mpirun -np $NPROCS --rankfile system/rankfile snappyHexMesh -parallel -overwrite 2>&1 | tee log_mesh
# foamJob -parallel -np $NPROCS snappyHexMesh -overwrite 2>&1 | tee log_mesh

# Reconstruct the decomposed mesh back into a single mesh (useful for post-processing)
reconstructPar -constant -allRegions

# Remove meshing directories
rm -r processor*

# Renumber the mesh to make it easier to handle in post-processing
renumberMesh -constant -noZero -overwrite

# Run checkMesh and save the results to a new log
checkMesh 2>&1 | tee log_checkMesh
